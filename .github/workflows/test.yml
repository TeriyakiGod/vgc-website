name: Test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'
  # Test database configuration
  DB_NAME: test_vgc_website
  DB_USER: test_user
  DB_PASSWORD: test_password
  DB_HOST: localhost
  DB_PORT: 5432
  SECRET_KEY: test-secret-key-for-ci
  DEBUG: 'False'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_vgc_website
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run pre-commit hooks
      run: |
        pre-commit install
        pre-commit run --all-files

    - name: Run database migrations
      run: |
        python manage.py migrate --noinput

    - name: Run Django system checks
      run: |
        python manage.py check --deploy

    - name: Run tests
      run: |
        python manage.py test

    - name: Verify migrations are up to date
      run: |
        python manage.py migrate --check
