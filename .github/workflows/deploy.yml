name: Test and Deploy to CapRover

env:
    CONTEXT_DIR: './'
    IMAGE_NAME: ${{ github.repository }}
    DOCKERFILE: Dockerfile
    CAPROVER_APP: ${{ secrets.CAPROVER_APP_NAME }}
    DOCKER_REGISTRY: ghcr.io
    # Test database configuration
    PYTHON_VERSION: '3.12'
    DB_NAME: test_vgc_website
    DB_USER: test_user
    DB_PASSWORD: test_password
    DB_HOST: localhost
    DB_PORT: 5432
    SECRET_KEY: test-secret-key-for-ci
    DEBUG: 'False'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_vgc_website
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run pre-commit hooks
      run: |
        pre-commit install
        pre-commit run --all-files

    - name: Run database migrations
      run: |
        python manage.py migrate --noinput

    - name: Run Django system checks
      run: |
        python manage.py check --deploy

    - name: Run tests
      run: |
        python manage.py test

    - name: Verify migrations are up to date
      run: |
        python manage.py migrate --check

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up environment variables
      run: |
        IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
        echo "IMAGE_NAME_WITH_REGISTRY=$DOCKER_REGISTRY/$IMAGE_NAME_LOWER" >> $GITHUB_ENV
        export IMAGE_NAME_WITH_REGISTRY=$DOCKER_REGISTRY/$IMAGE_NAME_LOWER
        echo "FULL_IMAGE_NAME=$IMAGE_NAME_WITH_REGISTRY:$GITHUB_SHA-gitsha" >> $GITHUB_ENV
        echo "CAPROVER_GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.CONTEXT_DIR }}
        file: ${{ env.DOCKERFILE }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.IMAGE_NAME_WITH_REGISTRY }}:latest
          ${{ env.FULL_IMAGE_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to CapRover
      uses: caprover/deploy-from-github@v1.1.2
      with:
        server: '${{ secrets.CAPROVER_SERVER }}'
        app: '${{ env.CAPROVER_APP }}'
        token: '${{ secrets.CAPROVER_APP_TOKEN }}'
        image: '${{ env.FULL_IMAGE_NAME }}'
